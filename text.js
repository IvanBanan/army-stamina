arrExcersices = {
    'asdf jkl;(rdm)': "asdfjkl;"
    ,
    'asdf jkl;(ex)': [
    "asdfjkl;"
    ]
    ,
    'ert yui gh(rdm)': "ertyuigh"
    ,
    'qw op[]\'\\(rdm)': "qwop[]\'\\"
    ,
    'zxcvbnm,./(rdm)': "zxcvbnm,./"
    ,
    'a-z(rdm)':"qwertyuiop[]asdfghjkl;'zxcvbnm,./"
    ,    
    '0-9(rdm)': "0123456789"    
    ,
    'а-я(rdm)': "йцукенгшщзхъфывапролджэячсмитьбю.,"
    ,
    '4 keyboard row': "!@#$%^&*()_+1234567890-=;:'\"\\|/`~<>,."    
    ,
    'Full texts': [
    "You can help the Fedora Project community continue to improve Fedora if you file bug reports and enhancement requests. Refer to Bugs And Feature Requests, on the Fedora wiki, for more information about bug and feature reporting. Thank you for your participation. To find out more general information about Fedora, refer to the following pages, on the Fedora wiki."
    , "Need Help? There are a number of places you can get assistance should you run into problems. If you run into a problem and would like some assistance, go to http://ask.fedoraproject.org. Many answers are already there, but if you don't find yours, you can simply post a new question. This has the advantage that anyone else with the same problem can find the answer, too. You may also find assistance on the #fedora channel on the IRC net irc.freenode.net. Keep in mind that the channel is populated by volunteers wanting to help, but folks knowledgeable about a specific topic might not always be available."
    , "Overview. As always, Fedora continues to develop (Red Hat contributions) and integrate the latest free and open source software (Fedora 20 Features). The following sections provide a brief overview of major changes from the last release of Fedora. For more details about the features that are included in Fedora 20 refer to the individual wiki pages that detail feature goals and progress: http://fedoraproject.org/wiki/Releases/20/FeatureList."
    , "Hardware Overview. Fedora 20 provides software to suit a wide variety of applications. The storage, memory and processing requirements vary depending on usage. For example, a high traffic database server requires much more memory and storage than a business desktop, which in turn has higher requirements than a single-purpose virtual machine."
    , "Minimum System Configuration. The figures below are a recommended minimum for the default installation. Your requirements may differ, and most applications will benefit from more than the minimum resources. Fedora 20 can be installed and used on systems with limited resources for some applications. Text, vnc, or kickstart installations are advised over graphical installation for systems with very low memory. Larger package sets require more memory during installation, so users with less than 768MB of system memory may have better results preforming a minimal install and adding to it afterward. For best results on systems with less than 1GB of memory, use the DVD installation image."
    , "Display resolution. Graphical Installation requires 800x600 resolution or higher. Graphical installation of Fedora 19 requires a minimum screen resolution of 800x600. Owners of devices with lower resolution, such as some netbooks, should use text or VNC installation. Once installed, Fedora will support these lower resolution devices. The minimum resolution requirement applies only to graphical installation."
    , "ARM Specific Content. ARM in Fedora is all grown up! With the release of Fedora 20, ARM is considered a primary architecture meaning that it receives the same amount of attention that the x86 and x86-64 releases get. Fedora ARM officially supports armv7hl, and work on AArch64 is underway. To find out how to help or learn about other unofficial ARM ports read the ARM section of the wiki. Architectures/ARM"
    , "Shared System Certificate Tools. Fedora's Shared System Certificate feature is being enhanced this release with the addition of the p11-kit-trust application. This package allows modification to trust anchors and blacklist keys and certificates. With a single command, administrators can make changes to their system's certificate database instead of adding a file to a special directory and running a special command. This new tool continues the development of the Shared System Certificate feature."
    , "SSD caching for block devices. Fedora 20 offers experimental support for adding solid state drives (SSDs) as fast, transparent caches to traditional rotating storage (HDDs). Filesystems on the SSD cached block devices offer both the speed of SSDs and volume of HDDs. Both traditional and LVM partitioning schemes can benefit from this functionality."
    , "Make backups! Always back up your data before making low level changes, such as migrating to a bcache device. Until tools like blocks are packaged for Fedora, users are advised to implement bcache by creating clean bcache devices and populating their filesystems from a recent backup."
    , "ARM emulation on x86 Hosts. Changes have been made to have smoother emulation of ARM guest virtual machines running on x86 hosts using standard libvirt tools, including virsh, virt-manager and virt-install. qemu has an ARM emulator that works well and is actively used in the Fedora ARM effort. However libvirt and virt-manager currently have issues launching qemu-system-arm VMs, mostly by encoding x86 assumptions in the generated command line that cause qemu-system-arm to fail to start. Changes have been made to fix this issue. More information can be found at https://fedoraproject.org/wiki/Changes/Virt_ARM_on_x86"
    , "Libvirt Client Access Control. The libvirt client allows for the setting of permission rules which can be applied to all managed objects and API operations, thus allowing for all client connections to be limited to a minimal set of rules and privileges. There are three levels of access which can be assigned."
    , "System administrators can set permission rules for authenticated connections. Every API call in libvirt has a set of permissions that are validated against the object that is being used. For example, User A wants to change a parameter in the domain object. When the user tries to save the change, virDomainSetSchedulerParametersFlags method will check whether the client has write permissions on the domain object. Additional checks and permission settings can be processed as well. Filtering can also be done to see which clients have permissions on which objects to allow for smother administration of permissions. Documentation for polkit access control can be found at http://libvirt.org/aclpolkit.html."
    , "Unauthenticated access is initially used for all connections. This state allows all API operations that are required to complete authentication. Following a successful authentication, two more levels can be assigned: Unrestricted, which gives full access to all API operations, and Restricted, which allows read only access. The libvirtd.conf configuration file is responsible for setting the access permissions. It uses the access_drivers parameter to enable this operation. Note that if more than one access driver is requested, all must succeed in order for permission to be granted."
    , "New unit types: Scope. Systemd now has two new unit types, scope and slice. scope units are automatically created by systemd out of existing processes. By grouping a process and its children together, a scope unit can be used to organize processes, apply resource units, or kill a group of processes. User sessions are one example of processes contained in a scope unit."
    , "Slice units are used to group units that manage processes into a hierarchy that allows control of resources allocated to the slice. The default slices are machine.slice, for virtual machines and containers; system.slice, for system services; and user.slice, for user sessions. These default slices are automatically populated. Instance units, such as getty@.service, are spawned on demand using the template defined in their configuration file. Each type of template is given a subslice of the system slice, and instances are contained within that slice."
    , "X2Go. X2Go is a featureful remote desktop solution based on a fork of NoMachine's GPL'ed NX3 libraries. X2Go packages allow Fedora 20 to work as a scalable server or versatile client. Entire desktop sessions can be paused and migrated, and the software supports audio and file transfers. X2Go with accelerated desktops. X2Go may not start properly with 3D accelerated desktops like GNOME3. For best results, use a desktop environment that does not require acceleration."
    ]
};
